# coding: utf-8

"""
    finAPI RESTful Services

    finAPI RESTful Services  # noqa: E501

    OpenAPI spec version: v1.42.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.categorization_check_result import CategorizationCheckResult  # noqa: F401,E501


class CategorizationCheckResults(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'categorization_check_result': 'list[CategorizationCheckResult]'
    }

    attribute_map = {
        'categorization_check_result': 'categorizationCheckResult'
    }

    def __init__(self, categorization_check_result=None):  # noqa: E501
        """CategorizationCheckResults - a model defined in Swagger"""  # noqa: E501

        self._categorization_check_result = None
        self.discriminator = None

        self.categorization_check_result = categorization_check_result

    @property
    def categorization_check_result(self):
        """Gets the categorization_check_result of this CategorizationCheckResults.  # noqa: E501

        List of results  # noqa: E501

        :return: The categorization_check_result of this CategorizationCheckResults.  # noqa: E501
        :rtype: list[CategorizationCheckResult]
        """
        return self._categorization_check_result

    @categorization_check_result.setter
    def categorization_check_result(self, categorization_check_result):
        """Sets the categorization_check_result of this CategorizationCheckResults.

        List of results  # noqa: E501

        :param categorization_check_result: The categorization_check_result of this CategorizationCheckResults.  # noqa: E501
        :type: list[CategorizationCheckResult]
        """
        if categorization_check_result is None:
            raise ValueError("Invalid value for `categorization_check_result`, must not be `None`")  # noqa: E501

        self._categorization_check_result = categorization_check_result

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CategorizationCheckResults):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
